#!/bin/bash

root_dev=$(findmnt -nv -o SOURCE /)
efi_dev=$(findmnt -n -o SOURCE /boot/efi)

if [ -n "$root_dev" ] && [ -n "$efi_dev" ]; then
    if [ "$(blkid "$efi_dev" | tr -d '"' | grep 'TYPE=vfat')" ]; then
	# can't change the btrfs uuid while the device is mounted
	# commenting out for now...
        #echo "Randomizing root filesystem UUID..."
        #btrfs_uuid_old="$(blkid -c /dev/null "$root_dev" -o export | grep '^UUID=')"
        #btrfstune -m "$root_dev"
        #btrfs_uuid_new="$(blkid -c /dev/null "$root_dev" -o export | grep '^UUID=')"
        #echo "BTRFS partition: $btrfs_uuid_new"
	
	echo -e "\nSetting $efi_dev label to EFI-FEDORA"
	dosfslabel $efi_dev 'EFI-FEDORA'
	
        echo -e '\nRandomizing EFI system partition UUID...'
        # Ugly... why isn't there a command to do this?
        efi_uuid_old=$(blkid -c /dev/null "$efi_dev" -o export | grep '^UUID=')
        ssize="$(blockdev --getss "$efi_dev")"
        dd bs=1 seek=67 count=4 conv=notrunc if=/dev/urandom of="$efi_dev"
        dd bs=1 skip=67 seek=$((67+6*$ssize)) count=4 conv=notrunc if="$efi_dev" of="$efi_dev"
        efi_uuid_new=$(blkid -c /dev/null "$efi_dev" -o export | grep '^UUID=')
        echo -e "EFI partition: $efi_uuid_new\n"
    fi
fi

if [ -n "$efi_uuid_new" ]; then
    echo "Regenerating /etc/fstab..."
    sed -i "s/$efi_uuid_old/$efi_uuid_new/" /etc/fstab
    echo
fi

# can't change the btrfs uuid while the device is mounted
# commenting out for now...
#if [ -n "$btrfs_uuid_new" ]; then
#    echo "Regenerating /etc/fstab..."
#    sed -i "s/$btrfs_uuid_old/$btrfs_uuid_new/" /etc/fstab
#    echo
#fi

systemd-machine-id-setup
echo "KERNEL_INSTALL_MACHINE_ID=$(cat /etc/machine-id)" > /etc/machine-info

# create new BLS entries
# this is needed as the /etc/machine-id value has been changed

rm -f /boot/loader/entries/*.conf

installed_kernels=$(rpm -q kernel | sed 's/kernel-//')

for kernel_version in $installed_kernels
do
    kernel-install add $kernel_version /lib/modules/$kernel_version/vmlinuz
done


/usr/local/sbin/update-grub


# this is a quick and dirty method to expand the root partition and filesystem
# there's room for improvement....

root_device_path=$(findmnt / -o source -nv)

if [ $(echo $root_device_path | grep '^/dev/nvme') ]; then
	part_id=$(echo $root_device_path | egrep -o 'p[0-9]+$')
	part_num=$(echo $part_id | tr -d 'p')
	root_disk=$(echo $root_device_path | sed "s/$part_id$//")
fi

echo -e "\ngrowpart $root_disk $part_num"
growpart $root_disk $part_num
echo -e "\nbtrfs filesystem resize max /"
btrfs filesystem resize max /
